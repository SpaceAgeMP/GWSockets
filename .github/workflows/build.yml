name: Build

on: [push]

env:
  PROJECT_GENERATOR_VERSION: 3

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release

  build_windows:
    needs: [create_release]
    runs-on: windows-latest
    env:
      PREMAKE5_URL: https://github.com/danielga/garrysmod_common/releases/download/premake-build%2F5.0.0-beta2/premake-5.0.0-beta2-windows.zip
      OPENSSL64_URL: https://download.firedaemon.com/FireDaemon-OpenSSL/openssl-3.1.1.zip
      BOOST_URL: https://downloads.sourceforge.net/project/boost/boost-binaries/1.82.0/boost_1_82_0-msvc-14.3-64.exe
    steps:
      - uses: actions/checkout@v3
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Build
        run: |
          mkdir .\openssl64
          mkdir .\lib64\windows

          Invoke-WebRequest -uri "$env:PREMAKE5_URL" -Method "GET" -Outfile ".\premake5.zip"
          Invoke-WebRequest -uri "$env:OPENSSL64_URL" -Method "GET" -Outfile ".\openssl64.zip"
          Invoke-WebRequest -UserAgent "curl/7.81.0" -uri "$env:BOOST_URL" -Method "GET" -Outfile ".\boost.exe"
          
          Expand-Archive ".\premake5.zip" -DestinationPath ".\" -Force
          Expand-Archive ".\openssl64.zip" -DestinationPath ".\openssl64" -Force
          Start-Process .\boost.exe -NoNewWindow -Wait -ArgumentList "/silent"

          Move-Item -Path .\openssl64\openssl-3\x64\lib\*.lib -Destination .\lib64\windows
          Move-Item -Path .\openssl64\openssl-3\x64\include\openssl -Destination .\include
          Move-Item -Path C:\local\boost_*\boost -Destination .\include
          Move-Item -Path C:\local\boost_*\lib64*\libboost_system-vc143-mt-s-x64-1_82.lib -Destination .\lib64\windows\boost_system.lib

          .\premake5 --file=BuildProjects.lua --os=windows vs2022
          msbuild .\solutions\windows-vs2022\GWSockets.sln /m /p:Configuration=Release /p:Platform=x64
      - name: Upload release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          fail_on_unmatched_files: true
          files: "out/**/*.dll"

  build_linux:
    needs: [create_release]
    runs-on: ubuntu-latest
    env:
      PREMAKE5_URL: https://github.com/danielga/garrysmod_common/releases/download/premake-build%2F5.0.0-beta2/premake-5.0.0-beta2-linux.tar.gz
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: |
          set -ex
          sudo apt-get -y install libssl-dev libboost-dev libboost-system-dev

          rm -rf include/boost

          wget "${PREMAKE5_URL}" -O /tmp/premake.tar.gz
          sudo tar -xzf /tmp/premake.tar.gz -C /usr/local/bin

          premake5 --file=BuildProjects.lua --os=linux gmake
          cd solutions/linux-gmake
          gmake config=release_x86_64 -j$(nproc)
      - name: Upload release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          fail_on_unmatched_files: true
          files: "out/**/*.dll"

  build_macos:
    needs: [create_release]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        env:
          AR:
        run: |
          set -ex

          export HOMEBREW_ROOT="$(brew --prefix)"
          brew install premake make openssl boost

          rm -rf include/boost
          ln -sf "${HOMEBREW_ROOT}/opt/openssl/include/openssl" "${HOMEBREW_ROOT}/opt/boost/include/boost" include

          mkdir -p lib64/macosx
          ln -sf "${HOMEBREW_ROOT}/opt/openssl/lib/"* "${HOMEBREW_ROOT}/opt/boost/lib/"* lib64/macosx

          premake5 --file=BuildProjects.lua --os=macosx gmake
          cd solutions/macosx-gmake
          gmake config=release_x86_64 -j$(sysctl -n hw.ncpu)
      - name: Upload release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          fail_on_unmatched_files: true
          files: "out/**/*.dll"
